// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class MEVThreatDetected extends ethereum.Event {
  get params(): MEVThreatDetected__Params {
    return new MEVThreatDetected__Params(this);
  }
}

export class MEVThreatDetected__Params {
  _event: MEVThreatDetected;

  constructor(event: MEVThreatDetected) {
    this._event = event;
  }

  get threatId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get target(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get attacker(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get threatType(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class MEVThreatPrevented extends ethereum.Event {
  get params(): MEVThreatPrevented__Params {
    return new MEVThreatPrevented__Params(this);
  }
}

export class MEVThreatPrevented__Params {
  _event: MEVThreatPrevented;

  constructor(event: MEVThreatPrevented) {
    this._event = event;
  }

  get threatId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get protectedUser(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get savedAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OraclePriceUpdated extends ethereum.Event {
  get params(): OraclePriceUpdated__Params {
    return new OraclePriceUpdated__Params(this);
  }
}

export class OraclePriceUpdated__Params {
  _event: OraclePriceUpdated;

  constructor(event: OraclePriceUpdated) {
    this._event = event;
  }

  get symbol(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProtectionActivated extends ethereum.Event {
  get params(): ProtectionActivated__Params {
    return new ProtectionActivated__Params(this);
  }
}

export class ProtectionActivated__Params {
  _event: ProtectionActivated;

  constructor(event: ProtectionActivated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get level(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProtectionDeactivated extends ethereum.Event {
  get params(): ProtectionDeactivated__Params {
    return new ProtectionDeactivated__Params(this);
  }
}

export class ProtectionDeactivated__Params {
  _event: ProtectionDeactivated;

  constructor(event: ProtectionDeactivated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ThreatReported extends ethereum.Event {
  get params(): ThreatReported__Params {
    return new ThreatReported__Params(this);
  }
}

export class ThreatReported__Params {
  _event: ThreatReported;

  constructor(event: ThreatReported) {
    this._event = event;
  }

  get reporter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get threatId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get reward(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MEVProtector__getThreatDataResultValue0Struct extends ethereum.Tuple {
  get target(): Address {
    return this[0].toAddress();
  }

  get attacker(): Address {
    return this[1].toAddress();
  }

  get threatType(): i32 {
    return this[2].toI32();
  }

  get detectedAt(): BigInt {
    return this[3].toBigInt();
  }

  get estimatedLoss(): BigInt {
    return this[4].toBigInt();
  }

  get prevented(): boolean {
    return this[5].toBoolean();
  }

  get reporter(): Address {
    return this[6].toAddress();
  }
}

export class MEVProtector__getUserProtectionStatusResult {
  value0: boolean;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: boolean, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getProtected_(): boolean {
    return this.value0;
  }

  getLevel(): BigInt {
    return this.value1;
  }

  getReportsCount(): BigInt {
    return this.value2;
  }

  getPreventedCount(): BigInt {
    return this.value3;
  }
}

export class MEVProtector__threatsResult {
  value0: Address;
  value1: Address;
  value2: i32;
  value3: BigInt;
  value4: BigInt;
  value5: boolean;
  value6: Address;

  constructor(
    value0: Address,
    value1: Address,
    value2: i32,
    value3: BigInt,
    value4: BigInt,
    value5: boolean,
    value6: Address,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2)),
    );
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromAddress(this.value6));
    return map;
  }

  getTarget(): Address {
    return this.value0;
  }

  getAttacker(): Address {
    return this.value1;
  }

  getThreatType(): i32 {
    return this.value2;
  }

  getDetectedAt(): BigInt {
    return this.value3;
  }

  getEstimatedLoss(): BigInt {
    return this.value4;
  }

  getPrevented(): boolean {
    return this.value5;
  }

  getReporter(): Address {
    return this.value6;
  }
}

export class MEVProtector extends ethereum.SmartContract {
  static bind(address: Address): MEVProtector {
    return new MEVProtector("MEVProtector", address);
  }

  aegilonToken(): Address {
    let result = super.call("aegilonToken", "aegilonToken():(address)", []);

    return result[0].toAddress();
  }

  try_aegilonToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("aegilonToken", "aegilonToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  authorizedIndexer(): Address {
    let result = super.call(
      "authorizedIndexer",
      "authorizedIndexer():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_authorizedIndexer(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "authorizedIndexer",
      "authorizedIndexer():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  checkPriceAnomaly(symbol: string, currentPrice: BigInt): boolean {
    let result = super.call(
      "checkPriceAnomaly",
      "checkPriceAnomaly(string,uint256):(bool)",
      [
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromUnsignedBigInt(currentPrice),
      ],
    );

    return result[0].toBoolean();
  }

  try_checkPriceAnomaly(
    symbol: string,
    currentPrice: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkPriceAnomaly",
      "checkPriceAnomaly(string,uint256):(bool)",
      [
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromUnsignedBigInt(currentPrice),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  detectMEVThreat(
    target: Address,
    attacker: Address,
    threatType: i32,
    transactionData: Bytes,
  ): Bytes {
    let result = super.call(
      "detectMEVThreat",
      "detectMEVThreat(address,address,uint8,bytes):(bytes32)",
      [
        ethereum.Value.fromAddress(target),
        ethereum.Value.fromAddress(attacker),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(threatType)),
        ethereum.Value.fromBytes(transactionData),
      ],
    );

    return result[0].toBytes();
  }

  try_detectMEVThreat(
    target: Address,
    attacker: Address,
    threatType: i32,
    transactionData: Bytes,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "detectMEVThreat",
      "detectMEVThreat(address,address,uint8,bytes):(bytes32)",
      [
        ethereum.Value.fromAddress(target),
        ethereum.Value.fromAddress(attacker),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(threatType)),
        ethereum.Value.fromBytes(transactionData),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  detectedThreats(param0: Bytes): boolean {
    let result = super.call(
      "detectedThreats",
      "detectedThreats(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return result[0].toBoolean();
  }

  try_detectedThreats(param0: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "detectedThreats",
      "detectedThreats(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getThreatData(
    threatId: Bytes,
  ): MEVProtector__getThreatDataResultValue0Struct {
    let result = super.call(
      "getThreatData",
      "getThreatData(bytes32):((address,address,uint8,uint256,uint256,bool,address))",
      [ethereum.Value.fromFixedBytes(threatId)],
    );

    return changetype<MEVProtector__getThreatDataResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getThreatData(
    threatId: Bytes,
  ): ethereum.CallResult<MEVProtector__getThreatDataResultValue0Struct> {
    let result = super.tryCall(
      "getThreatData",
      "getThreatData(bytes32):((address,address,uint8,uint256,uint256,bool,address))",
      [ethereum.Value.fromFixedBytes(threatId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<MEVProtector__getThreatDataResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getUserProtectionStatus(
    user: Address,
  ): MEVProtector__getUserProtectionStatusResult {
    let result = super.call(
      "getUserProtectionStatus",
      "getUserProtectionStatus(address):(bool,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(user)],
    );

    return new MEVProtector__getUserProtectionStatusResult(
      result[0].toBoolean(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
    );
  }

  try_getUserProtectionStatus(
    user: Address,
  ): ethereum.CallResult<MEVProtector__getUserProtectionStatusResult> {
    let result = super.tryCall(
      "getUserProtectionStatus",
      "getUserProtectionStatus(address):(bool,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MEVProtector__getUserProtectionStatusResult(
        value[0].toBoolean(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
      ),
    );
  }

  goldkySubgraphURL(): string {
    let result = super.call(
      "goldkySubgraphURL",
      "goldkySubgraphURL():(string)",
      [],
    );

    return result[0].toString();
  }

  try_goldkySubgraphURL(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "goldkySubgraphURL",
      "goldkySubgraphURL():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  isProtected(param0: Address): boolean {
    let result = super.call("isProtected", "isProtected(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBoolean();
  }

  try_isProtected(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isProtected", "isProtected(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lastOraclePrices(param0: string): BigInt {
    let result = super.call(
      "lastOraclePrices",
      "lastOraclePrices(string):(uint256)",
      [ethereum.Value.fromString(param0)],
    );

    return result[0].toBigInt();
  }

  try_lastOraclePrices(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastOraclePrices",
      "lastOraclePrices(string):(uint256)",
      [ethereum.Value.fromString(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lastOracleUpdate(param0: string): BigInt {
    let result = super.call(
      "lastOracleUpdate",
      "lastOracleUpdate(string):(uint256)",
      [ethereum.Value.fromString(param0)],
    );

    return result[0].toBigInt();
  }

  try_lastOracleUpdate(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastOracleUpdate",
      "lastOracleUpdate(string):(uint256)",
      [ethereum.Value.fromString(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lastTransactionTime(param0: Address): BigInt {
    let result = super.call(
      "lastTransactionTime",
      "lastTransactionTime(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_lastTransactionTime(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastTransactionTime",
      "lastTransactionTime(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minimumLiquidityForProtection(): BigInt {
    let result = super.call(
      "minimumLiquidityForProtection",
      "minimumLiquidityForProtection():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_minimumLiquidityForProtection(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minimumLiquidityForProtection",
      "minimumLiquidityForProtection():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  priceDeviationThreshold(): BigInt {
    let result = super.call(
      "priceDeviationThreshold",
      "priceDeviationThreshold():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_priceDeviationThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "priceDeviationThreshold",
      "priceDeviationThreshold():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  protectionLevel(param0: Address): BigInt {
    let result = super.call(
      "protectionLevel",
      "protectionLevel(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_protectionLevel(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "protectionLevel",
      "protectionLevel(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  protectionSuccessReward(): BigInt {
    let result = super.call(
      "protectionSuccessReward",
      "protectionSuccessReward():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_protectionSuccessReward(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "protectionSuccessReward",
      "protectionSuccessReward():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  successfulPrevented(param0: Address): BigInt {
    let result = super.call(
      "successfulPrevented",
      "successfulPrevented(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_successfulPrevented(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "successfulPrevented",
      "successfulPrevented(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  threatReportReward(): BigInt {
    let result = super.call(
      "threatReportReward",
      "threatReportReward():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_threatReportReward(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "threatReportReward",
      "threatReportReward():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  threatReports(param0: Address): BigInt {
    let result = super.call(
      "threatReports",
      "threatReports(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_threatReports(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "threatReports",
      "threatReports(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  threats(param0: Bytes): MEVProtector__threatsResult {
    let result = super.call(
      "threats",
      "threats(bytes32):(address,address,uint8,uint256,uint256,bool,address)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return new MEVProtector__threatsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toI32(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBoolean(),
      result[6].toAddress(),
    );
  }

  try_threats(param0: Bytes): ethereum.CallResult<MEVProtector__threatsResult> {
    let result = super.tryCall(
      "threats",
      "threats(bytes32):(address,address,uint8,uint256,uint256,bool,address)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MEVProtector__threatsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toI32(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBoolean(),
        value[6].toAddress(),
      ),
    );
  }

  timeWindowForDetection(): BigInt {
    let result = super.call(
      "timeWindowForDetection",
      "timeWindowForDetection():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_timeWindowForDetection(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "timeWindowForDetection",
      "timeWindowForDetection():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transactionCount(param0: Address): BigInt {
    let result = super.call(
      "transactionCount",
      "transactionCount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_transactionCount(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "transactionCount",
      "transactionCount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  volumeAnomalyThreshold(): BigInt {
    let result = super.call(
      "volumeAnomalyThreshold",
      "volumeAnomalyThreshold():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_volumeAnomalyThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "volumeAnomalyThreshold",
      "volumeAnomalyThreshold():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _aegilonToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ActivateProtectionCall extends ethereum.Call {
  get inputs(): ActivateProtectionCall__Inputs {
    return new ActivateProtectionCall__Inputs(this);
  }

  get outputs(): ActivateProtectionCall__Outputs {
    return new ActivateProtectionCall__Outputs(this);
  }
}

export class ActivateProtectionCall__Inputs {
  _call: ActivateProtectionCall;

  constructor(call: ActivateProtectionCall) {
    this._call = call;
  }
}

export class ActivateProtectionCall__Outputs {
  _call: ActivateProtectionCall;

  constructor(call: ActivateProtectionCall) {
    this._call = call;
  }
}

export class DeactivateProtectionCall extends ethereum.Call {
  get inputs(): DeactivateProtectionCall__Inputs {
    return new DeactivateProtectionCall__Inputs(this);
  }

  get outputs(): DeactivateProtectionCall__Outputs {
    return new DeactivateProtectionCall__Outputs(this);
  }
}

export class DeactivateProtectionCall__Inputs {
  _call: DeactivateProtectionCall;

  constructor(call: DeactivateProtectionCall) {
    this._call = call;
  }
}

export class DeactivateProtectionCall__Outputs {
  _call: DeactivateProtectionCall;

  constructor(call: DeactivateProtectionCall) {
    this._call = call;
  }
}

export class DetectMEVThreatCall extends ethereum.Call {
  get inputs(): DetectMEVThreatCall__Inputs {
    return new DetectMEVThreatCall__Inputs(this);
  }

  get outputs(): DetectMEVThreatCall__Outputs {
    return new DetectMEVThreatCall__Outputs(this);
  }
}

export class DetectMEVThreatCall__Inputs {
  _call: DetectMEVThreatCall;

  constructor(call: DetectMEVThreatCall) {
    this._call = call;
  }

  get target(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get attacker(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get threatType(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get transactionData(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class DetectMEVThreatCall__Outputs {
  _call: DetectMEVThreatCall;

  constructor(call: DetectMEVThreatCall) {
    this._call = call;
  }

  get threatId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ReportThreatCall extends ethereum.Call {
  get inputs(): ReportThreatCall__Inputs {
    return new ReportThreatCall__Inputs(this);
  }

  get outputs(): ReportThreatCall__Outputs {
    return new ReportThreatCall__Outputs(this);
  }
}

export class ReportThreatCall__Inputs {
  _call: ReportThreatCall;

  constructor(call: ReportThreatCall) {
    this._call = call;
  }

  get threatId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ReportThreatCall__Outputs {
  _call: ReportThreatCall;

  constructor(call: ReportThreatCall) {
    this._call = call;
  }
}

export class SetAuthorizedIndexerCall extends ethereum.Call {
  get inputs(): SetAuthorizedIndexerCall__Inputs {
    return new SetAuthorizedIndexerCall__Inputs(this);
  }

  get outputs(): SetAuthorizedIndexerCall__Outputs {
    return new SetAuthorizedIndexerCall__Outputs(this);
  }
}

export class SetAuthorizedIndexerCall__Inputs {
  _call: SetAuthorizedIndexerCall;

  constructor(call: SetAuthorizedIndexerCall) {
    this._call = call;
  }

  get _indexer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAuthorizedIndexerCall__Outputs {
  _call: SetAuthorizedIndexerCall;

  constructor(call: SetAuthorizedIndexerCall) {
    this._call = call;
  }
}

export class SetGoldskySubgraphURLCall extends ethereum.Call {
  get inputs(): SetGoldskySubgraphURLCall__Inputs {
    return new SetGoldskySubgraphURLCall__Inputs(this);
  }

  get outputs(): SetGoldskySubgraphURLCall__Outputs {
    return new SetGoldskySubgraphURLCall__Outputs(this);
  }
}

export class SetGoldskySubgraphURLCall__Inputs {
  _call: SetGoldskySubgraphURLCall;

  constructor(call: SetGoldskySubgraphURLCall) {
    this._call = call;
  }

  get _url(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetGoldskySubgraphURLCall__Outputs {
  _call: SetGoldskySubgraphURLCall;

  constructor(call: SetGoldskySubgraphURLCall) {
    this._call = call;
  }
}

export class SetPriceDeviationThresholdCall extends ethereum.Call {
  get inputs(): SetPriceDeviationThresholdCall__Inputs {
    return new SetPriceDeviationThresholdCall__Inputs(this);
  }

  get outputs(): SetPriceDeviationThresholdCall__Outputs {
    return new SetPriceDeviationThresholdCall__Outputs(this);
  }
}

export class SetPriceDeviationThresholdCall__Inputs {
  _call: SetPriceDeviationThresholdCall;

  constructor(call: SetPriceDeviationThresholdCall) {
    this._call = call;
  }

  get _threshold(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPriceDeviationThresholdCall__Outputs {
  _call: SetPriceDeviationThresholdCall;

  constructor(call: SetPriceDeviationThresholdCall) {
    this._call = call;
  }
}

export class SetThreatReportRewardCall extends ethereum.Call {
  get inputs(): SetThreatReportRewardCall__Inputs {
    return new SetThreatReportRewardCall__Inputs(this);
  }

  get outputs(): SetThreatReportRewardCall__Outputs {
    return new SetThreatReportRewardCall__Outputs(this);
  }
}

export class SetThreatReportRewardCall__Inputs {
  _call: SetThreatReportRewardCall;

  constructor(call: SetThreatReportRewardCall) {
    this._call = call;
  }

  get _reward(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetThreatReportRewardCall__Outputs {
  _call: SetThreatReportRewardCall;

  constructor(call: SetThreatReportRewardCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateOraclePriceCall extends ethereum.Call {
  get inputs(): UpdateOraclePriceCall__Inputs {
    return new UpdateOraclePriceCall__Inputs(this);
  }

  get outputs(): UpdateOraclePriceCall__Outputs {
    return new UpdateOraclePriceCall__Outputs(this);
  }
}

export class UpdateOraclePriceCall__Inputs {
  _call: UpdateOraclePriceCall;

  constructor(call: UpdateOraclePriceCall) {
    this._call = call;
  }

  get symbol(): string {
    return this._call.inputValues[0].value.toString();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateOraclePriceCall__Outputs {
  _call: UpdateOraclePriceCall;

  constructor(call: UpdateOraclePriceCall) {
    this._call = call;
  }
}
